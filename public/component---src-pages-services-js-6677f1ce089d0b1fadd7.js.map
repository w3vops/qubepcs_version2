{"version":3,"sources":["webpack:///./src/components/service-main/service-main.styles.js","webpack:///./src/components/service-main/service-main.component.js","webpack:///./src/components/all-services/all-services.styles.js","webpack:///./src/components/all-services/all-services.component.js","webpack:///./src/pages/services.js"],"names":["ServiceMainContainer","styled","div","ServiceMainImage","h3","typeScale","header3","header4","Img","HeaderThree","h4","header5","Bar","ServiceMain","headerTitle","useRef","useEffect","gsap","to","duration","x","opacity","delay","ease","Power3","easeIn","data","ref","el","fluid","decorator","childImageSharp","crane","AllServicesContainer","section","ProjectPlanning","ConstructionContainer","ProjectAdmin","FlexGrid","FlexLeft","FlexRight","ServiceParaAnim","elem","from","scrollTrigger","trigger","start","y","AllServices","planPara","advisePara","projectPara","constructionPara","adminPara","adviseImage","document","querySelector","projectImage","window","registerPlugin","ScrollTrigger","console","log","easeInOut","plan","className","laptop","hands","airstrip","map","navScroll","title"],"mappings":"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","file":"component---src-pages-services-js-6677f1ce089d0b1fadd7.js","sourcesContent":["import styled from \"styled-components\";\nimport Img from \"gatsby-image\"\nimport {typeScale} from \"../../utils/elements\";\n\nexport const ServiceMainContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 80%;\n  margin: 120px auto 20px auto;\n  align-items: center;\n  height: 70vh;\n  \n  @media screen and (max-width: 767px) {\n    height: 100%;\n    grid-template-columns: 1fr;\n    grid-gap: 30px;\n    margin: 150px auto 30px auto;\n  }\n`;\n\nexport const ServiceMainText = styled.h3`\n  font-size: ${typeScale.header3};\n  \n  @media screen and (max-width: 767px) {\n    font-size: ${typeScale.header4};\n  }\n  \n  @media screen and (min-width: 768px) and (max-width: 1200px) {\n    font-size: ${typeScale.header4};\n  }\n`;\n\nexport const ServiceMainImage = styled(Img)`\n  width: 100%;\n  height: 100%;\n  object-position: left !important;\n`;\n\nexport const HeaderThree = styled.h4`\n  font-size: ${typeScale.header4};\n  transform: translateX(-50px);\n  opacity: 0;\n  line-height: 190%;\n  height: 100%;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n  @media only screen and (max-width: 600px){\n  font-size: ${typeScale.header5};\n  }\n`;\n\nexport const Bar = styled.div`\n  @media only screen and (max-width: 600px){\n  display: none;\n  }\n  position: absolute;\n  right: -20px;\n  height: 100%;\n  width: 100px;\n  top: 0;\n  z-index: -1;\n  &::before{\n  content: '';\n  background-color: rgba(121, 54, 97, .7);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: inline-block;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  }\n  .gatsby-image-wrapper{\n  height: 100%;\n  width: 100%;\n  }\n`;","import React, {useEffect, useRef} from 'react';\nimport {Bar, HeaderThree, ServiceMainContainer, ServiceMainImage} from \"./service-main.styles\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport {Container} from \"../home-about/home-about.style\";\nimport {gsap, Power3} from \"gsap/all\";\n\nconst ServiceMain = () => {\n    let headerTitle = useRef(null);\n    useEffect(() => {\n        gsap.to(headerTitle, {duration: 1, x: 0, opacity: 1, delay: .5, ease: Power3.easeIn})\n    })\n\n    const data = useStaticQuery(graphql`\n        query {\n            crane: file(relativePath: { eq: \"crane2.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 5000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n            decorator: file(relativePath: { eq: \"decorator.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 5000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n        }\n    `)\n\n    return (\n        <ServiceMainContainer>\n            <Container>\n                <HeaderThree ref={el => headerTitle = el}>\n                    QUBE PCS offers a wide range of professional management services tailored to meet\n                    each projectâ€™s needs, no matter the size and complexity\n                </HeaderThree>\n                <Bar>\n                    <Img fluid={data.decorator.childImageSharp.fluid}/>\n                </Bar>\n            </Container>\n            <ServiceMainImage fluid={data.crane.childImageSharp.fluid}/>\n        </ServiceMainContainer>\n    );\n};\n\nexport default ServiceMain;\n","import styled from \"styled-components\";\nimport {typeScale} from \"../../utils/elements\";\n\nexport const AllServicesContainer = styled.section`\n  height: 100%;\n  width: 85%;\n  margin: 50px auto 20px auto;\n  border-top: 1px solid rgba(0,0,0,0.05);\n  h3{\n    line-height: 190%;\n  }\n  \n  @media screen and (min-width: 768px) and (max-width: 1440px) {\n    width: 90%;\n  }\n`;\n\nexport const ProjectPlanning = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-bottom: 100px;\n  \n  h3 {\n    font-size: ${typeScale.header4};\n    margin: 70px auto 70px auto;\n    \n    @media screen and (max-width: 767px) {\n      font-size: ${typeScale.header4};\n    }\n  }\n  \n  .gatsby-image-wrapper {\n    height: 60vh;\n    \n    @media screen and (max-width: 767px) {\n      height: 350px;\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1200px) {\n      height: 40vh;\n    }\n  }\n`;\n\nexport const ConstructionContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  \n  h3 {\n    position: absolute;\n    left: 25%;\n    top: 50%;\n    transform: translateY(-50%);\n    text-align: center;\n    color: white;\n    z-index: 5;\n    width: 50%;\n    font-size: ${typeScale.header3};\n    \n    @media screen and (max-width: 767px) {\n      font-size: ${typeScale.header5};\n      width: 70%;\n      left: 15%;\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1200px) {\n      width: 80%;\n      left: 10%;\n    }\n  }\n  \n  \n  .gatsby-image-wrapper {\n    width: 100%;\n    height: 50vh;\n    \n    @media screen and (max-width: 767px) {\n      height: 40vh;\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1200px) {\n      height: 40vh;\n    }\n    \n    &:after {\n      content: \"\";\n      z-index: 2;\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: 100%;\n      background-color: black;\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const ProjectAdmin = styled.div`\n  //width: 80%;\n  margin: 70px auto;\n  height: 60vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 30px;\n  align-items: center;\n  border-top: 1px solid rgba(0,0,0,0.05);\n  padding-top: 50px;\n  \n  @media screen and (max-width: 767px) {\n    grid-template-columns: 1fr;\n    height: 100%;\n  }\n  \n  h3 {\n    font-size: ${typeScale.header5};\n    line-height: 220%;\n    \n    @media screen and (max-width: 1200px) {\n      font-size: ${typeScale.header5};\n    }\n  }\n  \n  .gatsby-image-wrapper {\n    height: 100%;\n    \n    @media screen and (max-width: 767px) {\n        height: 80%;\n      }\n  }\n`;\n\nexport const FlexGrid = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  border-top: 1px solid rgba(0,0,0,0.05);\n  padding-top: 50px;\n \n  \n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    height: 100%;\n    margin-bottom: 70px;\n  }\n  \n  @media screen and (min-width: 768px) and (max-width: 1440px) {\n    flex-direction: row;\n    height: 100%;\n  }\n`;\n\nexport const FlexLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 40%;\n  \n  h3 {\n    font-size: ${typeScale.header4};\n    margin-bottom: 50px;\n    \n    @media screen and (max-width: 767px) {\n      font-size: ${typeScale.header5};\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1440px) {\n      font-size: ${typeScale.header5};\n    }\n  }\n  \n  @media screen and (max-width: 767px) {\n    width: 100%;\n    margin-bottom: 50px;\n  }\n  \n  .gatsby-image-wrapper {\n    \n    @media screen and (max-width: 767px) {\n      height: 350px;\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1440px) {\n      height: 40%;\n    }\n  }\n`;\n\nexport const FlexRight = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  width: 40%;\n  margin-left: 10%;\n  margin-top: 80px;\n  \n  @media screen and (max-width: 767px) {\n    width: 100%;\n    margin-left: unset;\n    flex-direction: column;\n    margin-top: unset;\n  }\n  \n  @media screen and (min-width: 768px) and (max-width: 1440px) {\n      margin-top: 150px;\n  }\n  \n  h3 {\n    font-size: ${typeScale.header4};\n    margin-top: 50px;\n    \n    @media screen and (max-width: 767px) {\n      font-size: ${typeScale.header5};\n      margin-bottom: 40px;\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1440px) {\n      font-size: ${typeScale.header5};\n    }\n  }\n  \n  .gatsby-image-wrapper {\n    height: 46%;\n    \n    @media screen and (max-width: 767px) {\n      height: 350px;\n    }\n    \n    @media screen and (min-width: 768px) and (max-width: 1440px) {\n      height: 46%;\n    }\n  }\n`;\n\nexport const Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: rgba(0,0,0,1.00);\n  margin: 50px auto;\n`;\n\nexport const ServiceHeaders = styled.h3`\n  font-size: ${typeScale.header3};\n  line-height: 190%;\n  text-transform: uppercase;\n`;","import React, {useEffect, useRef} from 'react';\nimport {\n    AllServicesContainer,\n    ConstructionContainer,\n    FlexGrid, FlexLeft, FlexRight,\n    ProjectAdmin,\n    ProjectPlanning,\n} from \"./all-services.styles\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport {gsap, Power3, ScrollTrigger} from \"gsap/all\";\n\n\nexport const ServiceParaAnim = (elem) => {\n    gsap.from(elem, {\n        scrollTrigger: {\n            trigger: elem,\n            start: 'top bottom',\n        }, duration: 1, opacity: 0, y: 50, ease: Power3.easeIn\n    })\n}\n\nconst AllServices = () => {\n    let planPara = useRef(null);\n    let advisePara = useRef(null);\n    let projectPara = useRef(null);\n    let constructionPara = useRef(null);\n    let adminPara = useRef(null);\n\n    useEffect(() => {\n        const adviseImage = document.querySelector('.laptop .gatsby-image-wrapper');\n        const projectImage = document.querySelector('.hands .gatsby-image-wrapper');\n        typeof window !== `undefined` ? gsap.registerPlugin(ScrollTrigger) : console.log();\n        ServiceParaAnim(planPara);\n        ServiceParaAnim(advisePara);\n        ServiceParaAnim(projectPara);\n        ServiceParaAnim(constructionPara);\n        ServiceParaAnim(adminPara);\n\n        gsap.from(adviseImage, {\n            scrollTrigger: {\n                trigger: adviseImage,\n                start: 'top center',\n            }, duration: 1, opacity: 0, x: 120, delay: .5, ease: Power3.easeInOut\n        })\n        gsap.from(projectImage, {\n            scrollTrigger: {\n                trigger: projectImage,\n                start: 'top center',\n            }, duration: 1, opacity: 0, x: -120, delay: .5, ease: Power3.easeInOut\n        })\n    })\n\n    const data = useStaticQuery(graphql`\n        query {\n            airstrip: file(relativePath: { eq: \"airport-travel-waiting-terminal-34145.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 1000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n            map: file(relativePath: { eq: \"map.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 1000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n            plan: file(relativePath: { eq: \"plan.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 2000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n            laptop: file(relativePath: { eq: \"john-schnobrich-FlPc9_VocJ4-unsplash.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 1000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n            hands: file(relativePath: { eq: \"stil--837JygbCJo-unsplash.jpg\"}) {\n                childImageSharp {\n                    fluid(maxWidth: 1000) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n        }\n    `)\n\n    return (\n        <AllServicesContainer>\n            <ProjectPlanning>\n                <h3 ref={el => planPara = el}>Project Planning and Scheduling</h3>\n                <Img fluid={data.plan.childImageSharp.fluid}/>\n            </ProjectPlanning>\n\n            <FlexGrid>\n                <FlexLeft className='laptop'>\n                    <h3 ref={el => advisePara = el}>\n                        Project Advisory, Consultation & Project Coordination\n                    </h3>\n                    <Img fluid={data.laptop.childImageSharp.fluid}/>\n                </FlexLeft>\n\n                <FlexRight className='hands'>\n                    <h3 ref={el => projectPara = el}>\n                        Project, Programme Management & Pre-Contract and Post-Contract Management\n                    </h3>\n                    <Img fluid={data.hands.childImageSharp.fluid}/>\n                </FlexRight>\n            </FlexGrid>\n\n            <ConstructionContainer>\n                <Img fluid={data.airstrip.childImageSharp.fluid}/>\n                <h3 ref={el => constructionPara = el}>Construction Management and Site Supervision</h3>\n            </ConstructionContainer>\n\n            <ProjectAdmin>\n                <h3 ref={el => adminPara = el}>\n                    Aviation consultancy with focus on Safety Management Systems, Operational and Technical Management\n                    Systems, Environmental Management, Risk Management, Change Management, Audits and Training.\n                </h3>\n                <Img fluid={data.map.childImageSharp.fluid}/>\n            </ProjectAdmin>\n\n        </AllServicesContainer>\n    );\n};\n\nexport default AllServices;\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ServiceMain from \"../components/service-main/service-main.component\";\nimport AllServices from \"../components/all-services/all-services.component\";\n\n\nexport default () => {\n\n    return (\n        <Layout navScroll={false}>\n            <SEO title=\"Services\"/>\n            <ServiceMain />\n            <AllServices />\n        </Layout>\n    )\n}\n\n\n\n"],"sourceRoot":""}